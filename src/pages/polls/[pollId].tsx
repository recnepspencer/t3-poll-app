import { type NextPage } from "next";
import Head from "next/head";
import { useRouter } from "next/router";
import React, { useState } from "react";
import { api } from "~/utils/api";

const Poll = () => {
  const [selectedAnswer, setSelectedAnswer] = useState("");

  const router = useRouter();
  const pollId = router.query.pollId as string;
  const pollResponse = api.poll.getPoll.useQuery(
    {
      pollId,
    },
    {
      enabled: !!pollId,
    }
  );
  console.log(pollResponse);

  const poll = pollResponse.data;

  function handleRadioChange(e: React.ChangeEvent<HTMLInputElement>) {
    setSelectedAnswer(e.target.value);
  }

  function handlePollSubmit(e: React.FormEvent<HTMLFormElement>) {
    e.preventDefault();
  }


  return (
    <>
      <Head>
        <title>Answer a poll</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="bg-gr flex min-h-screen flex-col items-center justify-center text-center">
        {pollResponse.isLoading ? (
          <>Loading...</>
        ) : (
          <>
            <h1 className="text-4xl">{pollResponse.data?.answer}</h1>
            <form onSubmit={handlePollSubmit}>
              {poll?.answers.map((answer) => (
                <fieldset 
                key={answer.id}
                >
                  <input
                    id={`input-${answer.id}`}
                    type="radio"
                    value={answer.id}
                    name="answerGroup"
                    checked={selectedAnswer === answer.id}
                    onChange={handleRadioChange}
                    className="flex-gap-2"
                  />
                  <label htmlFor={`input-${answer.id}`}>{answer.text}</label>
                </fieldset>
              ))}
              <button
                className={`rounded bg-blue-500 px-4 py-2 font-bold text-white hover:bg-blue-700 ${
                  !selectedAnswer ? "bg-gray-400 hover:bg-gray-400 cursor-default" : ""
                }`}
                type="submit"
              >
                Submit
              </button>

            </form>
          </>
        )}
      </main>
    </>
  );
};

export default Poll;
